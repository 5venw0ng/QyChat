<?xml version="1.0" encoding="UTF-8" ?>
	<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper
	namespace="com.vocust.qywx.demo.dao.mapper.MsgContentMapper">


	<sql id="table"> tbl_msgcontent </sql>

	<resultMap id="MsgContentInfoMap"
		type="com.vocust.qywx.demo.dao.entity.MsgContent">
		<result column="id" property="id" />
		<result column="msgid" property="msgid" />
		<result column="action" property="action" />
		<result column="sender" property="from" />
		<result column="fromView" property="fromView" />
		<result column="tolist" property="tolist" />
		<result column="tolistView" property="tolistView" />
		<result column="roomid" property="roomid" />
		<result column="roomidView" property="roomidView" />
		<result column="msgtime" property="msgtime" />
		<result column="msgtype" property="msgtype" />
		<result column="text" property="text" />
		<result column="image" property="image" />
		<result column="weapp" property="weapp" />
		<result column="redpacket" property="redpacket" />
		<result column="file" property="file" />
		<result column="video" property="video" />
		<result column="voice" property="voice" />
		<result column="chatrecord" property="chatrecord" />
		<result column="filename" property="filename" />
	</resultMap>

	<select id="findAllByUserid" resultMap="MsgContentInfoMap">
		SELECT
			tmsg.sender,
			tmsg.fromView,
			tmsg.tolistView,
			tmsg.tolist,
			tmsg.roomid,
			MAX(tmsg.msgtime) msgtime
		FROM
			tbl_msgcontent tmsg
		WHERE tmsg.action='send'
		AND tmsg.sender=#{mc.from}
		AND tmsg.tolist is not null
		AND (tmsg.roomid = '' OR tmsg.roomid IS NULL)
		GROUP BY tmsg.tolistView
		ORDER BY tmsg.msgtime ASC limit #{page.pageNum},#{page.numPerPage}
	</select>

	<select id="findGroupByUserid" resultMap="MsgContentInfoMap">
		SELECT
			tmsg.sender,
			tmsg.fromView,
			MAX(tmsg.tolistView) tolistView,
			MAX(tmsg.tolist) tolist,
			tmsg.roomid,
			MAX(tmsg.msgtime) msgtime
		FROM
			tbl_msgcontent tmsg
		WHERE tmsg.action='send'
		AND tmsg.sender=#{mc.from}
		AND tmsg.tolist is not null
		AND (tmsg.roomid &lt;&gt; '' AND tmsg.roomid IS NOT NULL)
		GROUP BY tmsg.roomid
		ORDER BY tmsg.msgtime ASC
	</select>

	<select id="findMsgByUserid" resultMap="MsgContentInfoMap">
		SELECT
			tmsg.*
		FROM
		tbl_msgcontent tmsg
		WHERE tmsg.action='send'

		<if test="mc.tolist != null &amp;&amp; mc.tolist != ''">
			AND
			((tmsg.sender=#{mc.from} AND tmsg.tolist = #{mc.tolist})
			OR (tmsg.sender=replace(replace(#{mc.tolist},'["',''),'"]','') AND tmsg.tolist = concat('["',#{mc.from},'"]')))
		</if>
		<if test="mc.roomid != null &amp;&amp; mc.roomid != ''">AND tmsg.roomid = #{mc.roomid}</if>

		<if test="mc.fromDate != null &amp;&amp; mc.fromDate != ''">AND FROM_UNIXTIME(tmsg.msgtime/1000,'%Y-%m-%d %H:%i:%s') &gt; #{mc.fromDate}</if>
		<if test="mc.thruDate != null &amp;&amp; mc.thruDate != ''">AND FROM_UNIXTIME(tmsg.msgtime/1000,'%Y-%m-%d %H:%i:%s') &gt; #{mc.thruDate}</if>

		ORDER BY tmsg.msgtime limit #{page.pageNum},#{page.numPerPage}
	</select>

	<select id="counts" resultType="java.lang.Integer">
		SELECT count(1) FROM
		<include refid="table" />
	</select>

	<insert id="insertMsgContent">
		INSERT INTO
		<include refid="table" />
		(msgid,action,sender,fromView,tolist,tolistView,roomid,roomidView,msgtime,msgtype,text,image,weapp,redpacket,file,video,voice,chatrecord,filename)
		VALUES (#{msgid},#{action},#{from},#{fromView},#{tolist},#{tolistView},#{roomid},#{roomidView},#{msgtime},#{msgtype},#{text},#{image},#{weapp},#{redpacket},#{file},#{video},#{voice},#{chatrecord},#{filename})
	</insert>

	<select id="getMsgByIdAndType" resultType="java.lang.String">
		SELECT ${msgtype} FROM
		<include refid="table" />
		WHERE id = #{id}
	</select>

	<update id="updateFileName" parameterType="com.vocust.qywx.demo.dao.entity.MsgContent" keyProperty="id">
		UPDATE tbl_msgcontent
		<set>
			filename=#{filename}
		</set>
		WHERE id=#{id}
	</update>
	
	
	<select id="getFileById" resultType="java.lang.String">
		SELECT filename FROM <include refid="table" /> WHERE id = #{id}
	</select>

	<!-- 清空表数据 -->
	<delete id="clearDatas">
		truncate TABLE
		<include refid="table" />
	</delete>
</mapper>